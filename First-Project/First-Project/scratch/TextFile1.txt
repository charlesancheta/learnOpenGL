// now make a rectangle
	//float vertices[] = {
	//	 0.5f,  0.5f, 0.0f, // top right
	//	 0.5f, -0.5f, 0.0f, // bottom right
	//	-0.5f, -0.5f, 0.0f, // bottom left
	//	-0.5f,  0.5f, 0.0f, // top left
	//};
	//unsigned int indices[] = {
	//	0, 1, 3, // first triangle
	//	1, 2, 3, // second triangle
	//};

	// create two triangles next to each other
	
	/*float vertices[2][9] = {
		{
		-1.0, -0.5, 0.0,
		-0.5,  0.5, 0.0,
		 0.0, -0.5, 0.0
		},
		{
		 0.0, -0.5, 0.0,
		 0.5,  0.5, 0.0,
		 1.0, -0.5, 0.0
		}
	};*/

	// create objects
	//unsigned int VBOs[2], VAOs[2];
	////unsigned int EBO;
	//for (int i = 0; i < 2; i++) {
	//	glGenVertexArrays(1, &VAOs[i]);
	//	glGenBuffers(1, &VBOs[i]);
	//	// bind vao first, then bind and set vertex buffers, then config vertex attributes
	//	glBindVertexArray(VAOs[i]);
	//	glBindBuffer(GL_ARRAY_BUFFER, VBOs[i]);
	//	glBufferData(GL_ARRAY_BUFFER, sizeof(vertices[i]), vertices[i], GL_STATIC_DRAW);

	//	glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);
	//	glEnableVertexAttribArray(0);
	//}
	//glGenBuffers(1, &EBO);

	//glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);
	//glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW);

	// unbind because it's safe now??????????
	//glBindBuffer(GL_ARRAY_BUFFER, 0);
	// keep EBO bound
	//glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);

	// generally don't need to do this because we have to call bind anyway
	//glBindVertexArray(0);
	
	// uncomment to view wireframe mode
	//glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);

